   1               		.file	"main.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.section	.rodata.str1.1,"aMS",@progbits,1
  11               	.LC0:
  12 0000 4156 522D 		.string	"AVR-CAN-Demo Code\n\rFelix Schulze 2015\n\rmail@felixschulze.com\n\r\n\r"
  12      4341 4E2D 
  12      4465 6D6F 
  12      2043 6F64 
  12      650A 0D46 
  13               	.LC1:
  14 0041 3A3A 2049 		.string	":: Init mcp2515\n\r"
  14      6E69 7420 
  14      6D63 7032 
  14      3531 350A 
  14      0D00 
  15               	.LC2:
  16 0053 3A3A 2073 		.string	":: send test message\n\r"
  16      656E 6420 
  16      7465 7374 
  16      206D 6573 
  16      7361 6765 
  17               		.section	.text.startup,"ax",@progbits
  18               	.global	main
  20               	main:
  21               	.LFB10:
  22               		.file 1 "main.c"
   1:main.c        **** /*
   2:main.c        ****  * Author: Felix Schulze
   3:main.c        ****  * Date:    28/02/2015
   4:main.c        ****  *
   5:main.c        ****  * Desc:   AVR Atmega8 Can-Demo Code
   6:main.c        ****  * Ver.:      0.02
   7:main.c        ****  *
   8:main.c        ****  */
   9:main.c        **** 
  10:main.c        **** #define BAUD  9600
  11:main.c        **** #define F_CPU 7372800
  12:main.c        **** 
  13:main.c        **** #define LED0 PC2
  14:main.c        **** #define LED1 PC3
  15:main.c        **** #define PORT_LED0 PORTC
  16:main.c        **** #define PORT_LED1 PORTC
  17:main.c        **** #define DDR_LED0 DDRC
  18:main.c        **** #define DDR_LED1 DDRC
  19:main.c        **** 
  20:main.c        **** #include <avr/io.h>
  21:main.c        **** #include <avr/interrupt.h>
  22:main.c        **** #include <util/delay.h>
  23:main.c        **** #include <stdlib.h>
  24:main.c        **** #include "uart.h"
  25:main.c        **** #include "mcp2515.h"
  26:main.c        **** 
  27:main.c        **** 
  28:main.c        **** int main(void)
  29:main.c        **** {
  23               		.loc 1 29 0
  24               		.cfi_startproc
  25 0000 CF93      		push r28
  26               	.LCFI0:
  27               		.cfi_def_cfa_offset 3
  28               		.cfi_offset 28, -2
  29 0002 DF93      		push r29
  30               	.LCFI1:
  31               		.cfi_def_cfa_offset 4
  32               		.cfi_offset 29, -3
  33 0004 CDB7      		in r28,__SP_L__
  34 0006 DEB7      		in r29,__SP_H__
  35               	.LCFI2:
  36               		.cfi_def_cfa_register 28
  37 0008 6C97      		sbiw r28,28
  38               	.LCFI3:
  39               		.cfi_def_cfa_offset 32
  40 000a 0FB6      		in __tmp_reg__,__SREG__
  41 000c F894      		cli
  42 000e DEBF      		out __SP_H__,r29
  43 0010 0FBE      		out __SREG__,__tmp_reg__
  44 0012 CDBF      		out __SP_L__,r28
  45               	/* prologue: function */
  46               	/* frame size = 28 */
  47               	/* stack size = 30 */
  48               	.L__stack_usage = 30
  30:main.c        **** 
  31:main.c        **** 	char buffer[10];
  32:main.c        **** 	Canmsg msg;
  33:main.c        **** 	Canmsg newmsg;
  34:main.c        **** 
  35:main.c        **** 
  36:main.c        **** 	DDR_LED0 |= (1<<LED0);
  49               		.loc 1 36 0
  50 0014 A29A      		sbi 0x14,2
  37:main.c        **** 	DDR_LED1 |= (1<<LED1);
  51               		.loc 1 37 0
  52 0016 A39A      		sbi 0x14,3
  38:main.c        **** 
  39:main.c        **** 	msg.id = 0x1AAF123A;
  53               		.loc 1 39 0
  54 0018 8AE3      		ldi r24,lo8(58)
  55 001a 92E1      		ldi r25,lo8(18)
  56 001c AFEA      		ldi r26,lo8(-81)
  57 001e BAE1      		ldi r27,lo8(26)
  58 0020 8F87      		std Y+15,r24
  59 0022 988B      		std Y+16,r25
  60 0024 A98B      		std Y+17,r26
  61 0026 BA8B      		std Y+18,r27
  40:main.c        **** 	msg.rtr = 0;
  62               		.loc 1 40 0
  63 0028 1B8A      		std Y+19,__zero_reg__
  41:main.c        **** 	msg.length = 4;
  64               		.loc 1 41 0
  65 002a 84E0      		ldi r24,lo8(4)
  66 002c 8C8B      		std Y+20,r24
  42:main.c        **** 	msg.data[0] = 0x01;
  67               		.loc 1 42 0
  68 002e 91E0      		ldi r25,lo8(1)
  69 0030 9D8B      		std Y+21,r25
  43:main.c        **** 	msg.data[1] = 0x02;
  70               		.loc 1 43 0
  71 0032 92E0      		ldi r25,lo8(2)
  72 0034 9E8B      		std Y+22,r25
  44:main.c        **** 	msg.data[2] = 0x03;
  73               		.loc 1 44 0
  74 0036 93E0      		ldi r25,lo8(3)
  75 0038 9F8B      		std Y+23,r25
  45:main.c        **** 	msg.data[3] = 0x04;
  76               		.loc 1 45 0
  77 003a 888F      		std Y+24,r24
  46:main.c        **** 
  47:main.c        **** 
  48:main.c        **** 	uart_init(BAUD_SELECT(BAUD, F_CPU));
  78               		.loc 1 48 0
  79 003c 8FE2      		ldi r24,lo8(47)
  80 003e 90E0      		ldi r25,0
  81 0040 00D0      		rcall uart_init
  82               	.LVL0:
  49:main.c        **** 	
  50:main.c        **** 	uart_puts("AVR-CAN-Demo Code\n\rFelix Schulze 2015\n\rmail@felixschulze.com\n\r\n\r");
  83               		.loc 1 50 0
  84 0042 80E0      		ldi r24,lo8(.LC0)
  85 0044 90E0      		ldi r25,hi8(.LC0)
  86 0046 00D0      		rcall uart_puts
  87               	.LVL1:
  51:main.c        **** 	mcp_init();
  88               		.loc 1 51 0
  89 0048 00D0      		rcall mcp_init
  90               	.LVL2:
  52:main.c        **** 	uart_puts(":: Init mcp2515\n\r");
  91               		.loc 1 52 0
  92 004a 80E0      		ldi r24,lo8(.LC1)
  93 004c 90E0      		ldi r25,hi8(.LC1)
  94 004e 00D0      		rcall uart_puts
  95               	.LVL3:
  53:main.c        **** 
  54:main.c        **** 
  55:main.c        **** 	PORT_LED0 |= (1<<LED0);
  96               		.loc 1 55 0
  97 0050 AA9A      		sbi 0x15,2
  56:main.c        **** 
  57:main.c        **** 	
  58:main.c        **** 	
  59:main.c        **** 	can_send_msg(&msg);
  98               		.loc 1 59 0
  99 0052 CE01      		movw r24,r28
 100 0054 0F96      		adiw r24,15
 101 0056 00D0      		rcall can_send_msg
 102               	.LVL4:
  60:main.c        **** 	
  61:main.c        **** 	uart_puts(":: send test message\n\r");
 103               		.loc 1 61 0
 104 0058 80E0      		ldi r24,lo8(.LC2)
 105 005a 90E0      		ldi r25,hi8(.LC2)
 106 005c 00D0      		rcall uart_puts
 107               	.LVL5:
 108               	.L2:
  62:main.c        **** 
  63:main.c        **** 
  64:main.c        **** 	while(1)
  65:main.c        **** 	{	
  66:main.c        **** 		if(can_get_msg(&newmsg) == 0)
 109               		.loc 1 66 0
 110 005e CE01      		movw r24,r28
 111 0060 0196      		adiw r24,1
 112 0062 00D0      		rcall can_get_msg
 113               	.LVL6:
 114 0064 8111      		cpse r24,__zero_reg__
 115 0066 00C0      		rjmp .L2
  67:main.c        **** 		{
  68:main.c        **** 			uart_can_msg(&newmsg);
 116               		.loc 1 68 0
 117 0068 CE01      		movw r24,r28
 118 006a 0196      		adiw r24,1
 119 006c 00D0      		rcall uart_can_msg
 120               	.LVL7:
 121 006e 00C0      		rjmp .L2
 122               		.cfi_endproc
 123               	.LFE10:
 125               		.text
 126               	.Letext0:
 127               		.file 2 "/usr/avr/include/stdint.h"
 128               		.file 3 "mcp2515.h"
 129               		.file 4 "uart.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/cc9ZM3Wj.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/cc9ZM3Wj.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/cc9ZM3Wj.s:4      *ABS*:000000000000003f __SREG__
     /tmp/cc9ZM3Wj.s:5      *ABS*:0000000000000000 __tmp_reg__
     /tmp/cc9ZM3Wj.s:6      *ABS*:0000000000000001 __zero_reg__
     /tmp/cc9ZM3Wj.s:20     .text.startup:0000000000000000 main

UNDEFINED SYMBOLS
uart_init
uart_puts
mcp_init
can_send_msg
can_get_msg
uart_can_msg
__do_copy_data
