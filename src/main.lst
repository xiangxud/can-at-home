   1               		.file	"main.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.section	.rodata.str1.1,"aMS",@progbits,1
  11               	.LC0:
  12 0000 4341 4E2D 		.string	"CAN-Demo Code\n\r"
  12      4465 6D6F 
  12      2043 6F64 
  12      650A 0D00 
  13               		.section	.text.startup,"ax",@progbits
  14               	.global	main
  16               	main:
  17               	.LFB0:
  18               		.file 1 "main.c"
   1:main.c        **** /*
   2:main.c        ****  * Author: Felix Schulze
   3:main.c        ****  * Date:   21/02/2015
   4:main.c        ****  *
   5:main.c        ****  * Desc:   Can-Demo Code
   6:main.c        ****  * Ver.:   0.01
   7:main.c        ****  *
   8:main.c        ****  */
   9:main.c        **** 
  10:main.c        **** #define BAUD  9600
  11:main.c        **** #define F_CPU 7372800
  12:main.c        **** 
  13:main.c        **** #define LED0 PC2
  14:main.c        **** #define LED1 PC3
  15:main.c        **** #define PORT_LED0 PORTC
  16:main.c        **** #define PORT_LED1 PORTC
  17:main.c        **** #define DDR_LED0 DDRC
  18:main.c        **** #define DDR_LED1 DDRC
  19:main.c        **** 
  20:main.c        **** #include <avr/io.h>
  21:main.c        **** #include <avr/interrupt.h>
  22:main.c        **** #include "uart.h"
  23:main.c        **** #include "mcp2515.h"
  24:main.c        **** 
  25:main.c        **** 
  26:main.c        **** int main(void)
  27:main.c        **** {
  19               		.loc 1 27 0
  20               		.cfi_startproc
  21               	/* prologue: function */
  22               	/* frame size = 0 */
  23               	/* stack size = 0 */
  24               	.L__stack_usage = 0
  28:main.c        **** 	DDR_LED0 |= (1<<LED0);
  25               		.loc 1 28 0
  26 0000 A29A      		sbi 0x14,2
  29:main.c        **** 	DDR_LED1 |= (1<<LED1);
  27               		.loc 1 29 0
  28 0002 A39A      		sbi 0x14,3
  30:main.c        **** 
  31:main.c        **** 
  32:main.c        **** 	uart_init(UART_BAUD_SELECT(BAUD, F_CPU));
  29               		.loc 1 32 0
  30 0004 8FE2      		ldi r24,lo8(47)
  31 0006 90E0      		ldi r25,0
  32 0008 00D0      		rcall uart_init
  33               	.LVL0:
  33:main.c        **** 	sei();
  34               		.loc 1 33 0
  35               	/* #APP */
  36               	 ;  33 "main.c" 1
  37 000a 7894      		sei
  38               	 ;  0 "" 2
  34:main.c        **** 
  35:main.c        **** 	
  36:main.c        **** 	PORT_LED1 |= (1<<LED1);
  39               		.loc 1 36 0
  40               	/* #NOAPP */
  41 000c AB9A      		sbi 0x15,3
  37:main.c        **** 	uart_puts("CAN-Demo Code\n\r");
  42               		.loc 1 37 0
  43 000e 80E0      		ldi r24,lo8(.LC0)
  44 0010 90E0      		ldi r25,hi8(.LC0)
  45 0012 00D0      		rcall uart_puts
  46               	.LVL1:
  38:main.c        **** 	PORT_LED0 |= (1<<LED0);
  47               		.loc 1 38 0
  48 0014 AA9A      		sbi 0x15,2
  49               	.L2:
  39:main.c        **** 
  40:main.c        **** 
  41:main.c        **** 	while(1);
  50               		.loc 1 41 0 discriminator 1
  51 0016 00C0      		rjmp .L2
  52               		.cfi_endproc
  53               	.LFE0:
  55               		.text
  56               	.Letext0:
  57               		.file 2 "uart.h"
  58               		.file 3 "/usr/avr/include/stdint.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccCyUerR.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/ccCyUerR.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/ccCyUerR.s:4      *ABS*:000000000000003f __SREG__
     /tmp/ccCyUerR.s:5      *ABS*:0000000000000000 __tmp_reg__
     /tmp/ccCyUerR.s:6      *ABS*:0000000000000001 __zero_reg__
     /tmp/ccCyUerR.s:16     .text.startup:0000000000000000 main

UNDEFINED SYMBOLS
uart_init
uart_puts
__do_copy_data
