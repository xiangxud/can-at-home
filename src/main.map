Archive member included to satisfy reference by file (symbol)

/usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.9.2/../../../../avr/lib/avr4/crtm8.o (exit)
/usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_copy_data.o)
                              main.o (__do_copy_data)
/usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_clear_bss.o)
                              uart.o (__do_clear_bss)

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000002000 xr
data             0x0000000000800060 0x000000000000ffa0 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000400 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD /usr/lib/gcc/avr/4.9.2/../../../../avr/lib/avr4/crtm8.o
LOAD main.o
LOAD uart.o
LOAD spi.o
LOAD mcp2515.o
LOAD /usr/lib/gcc/avr/4.9.2/../../../../avr/lib/avr4/libm.a
START GROUP
LOAD /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a
LOAD /usr/lib/gcc/avr/4.9.2/../../../../avr/lib/avr4/libm.a
LOAD /usr/lib/gcc/avr/4.9.2/../../../../avr/lib/avr4/libc.a
END GROUP

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000      0x296
 *(.vectors)
 .vectors       0x0000000000000000       0x26 /usr/lib/gcc/avr/4.9.2/../../../../avr/lib/avr4/crtm8.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
                0x0000000000000026                . = ALIGN (0x2)
                0x0000000000000026                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x0000000000000026        0x0 linker stubs
 *(.trampolines*)
                0x0000000000000026                __trampolines_end = .
 *(.progmem*)
                0x0000000000000026                . = ALIGN (0x2)
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x0000000000000026                __ctors_start = .
 *(.ctors)
                0x0000000000000026                __ctors_end = .
                0x0000000000000026                __dtors_start = .
 *(.dtors)
                0x0000000000000026                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x0000000000000026        0x0 /usr/lib/gcc/avr/4.9.2/../../../../avr/lib/avr4/crtm8.o
                0x0000000000000026                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x0000000000000026        0xc /usr/lib/gcc/avr/4.9.2/../../../../avr/lib/avr4/crtm8.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x0000000000000032       0x16 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_copy_data.o)
                0x0000000000000032                __do_copy_data
 .init4         0x0000000000000048       0x10 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_clear_bss.o)
                0x0000000000000048                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x0000000000000058        0x4 /usr/lib/gcc/avr/4.9.2/../../../../avr/lib/avr4/crtm8.o
 *(.init9)
 *(.text)
 .text          0x000000000000005c        0x2 /usr/lib/gcc/avr/4.9.2/../../../../avr/lib/avr4/crtm8.o
                0x000000000000005c                __vector_1
                0x000000000000005c                __vector_12
                0x000000000000005c                __bad_interrupt
                0x000000000000005c                __vector_6
                0x000000000000005c                __vector_3
                0x000000000000005c                __vector_17
                0x000000000000005c                __vector_7
                0x000000000000005c                __vector_5
                0x000000000000005c                __vector_4
                0x000000000000005c                __vector_9
                0x000000000000005c                __vector_2
                0x000000000000005c                __vector_15
                0x000000000000005c                __vector_8
                0x000000000000005c                __vector_14
                0x000000000000005c                __vector_10
                0x000000000000005c                __vector_16
                0x000000000000005c                __vector_18
 .text          0x000000000000005e        0x0 main.o
 .text          0x000000000000005e      0x14e uart.o
                0x000000000000005e                __vector_11
                0x00000000000000b0                __vector_13
                0x00000000000000fa                uart_init
                0x0000000000000122                uart_getc
                0x0000000000000158                uart_putc
                0x000000000000017a                uart_puts
                0x0000000000000190                uart_puts_p
 .text          0x00000000000001ac       0x24 spi.o
                0x00000000000001ac                spi_init
                0x00000000000001c6                spi_trans
 .text          0x00000000000001d0       0xaa mcp2515.o
                0x00000000000001d0                mcp_write_reg
                0x00000000000001fc                mcp_read_reg
                0x0000000000000214                mcp_bit_mod
                0x000000000000024a                mcp_init
 .text          0x000000000000027a        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_exit.o)
 .text          0x000000000000027a        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_copy_data.o)
 .text          0x000000000000027a        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_clear_bss.o)
                0x000000000000027a                . = ALIGN (0x2)
 *(.text.*)
 .text.startup  0x000000000000027a       0x18 main.o
                0x000000000000027a                main
 .text.libgcc.mul
                0x0000000000000292        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_exit.o)
 .text.libgcc.div
                0x0000000000000292        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_exit.o)
 .text.libgcc   0x0000000000000292        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x0000000000000292        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x0000000000000292        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x0000000000000292        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_exit.o)
 .text.libgcc.fixed
                0x0000000000000292        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_exit.o)
 .text.libgcc.mul
                0x0000000000000292        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_copy_data.o)
 .text.libgcc.div
                0x0000000000000292        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_copy_data.o)
 .text.libgcc   0x0000000000000292        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_copy_data.o)
 .text.libgcc.prologue
                0x0000000000000292        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_copy_data.o)
 .text.libgcc.builtins
                0x0000000000000292        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_copy_data.o)
 .text.libgcc.fmul
                0x0000000000000292        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_copy_data.o)
 .text.libgcc.fixed
                0x0000000000000292        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_copy_data.o)
 .text.libgcc.mul
                0x0000000000000292        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc.div
                0x0000000000000292        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc   0x0000000000000292        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc.prologue
                0x0000000000000292        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc.builtins
                0x0000000000000292        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc.fmul
                0x0000000000000292        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc.fixed
                0x0000000000000292        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_clear_bss.o)
                0x0000000000000292                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x0000000000000292        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_exit.o)
                0x0000000000000292                exit
                0x0000000000000292                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x0000000000000292        0x4 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_exit.o)
 *(.fini0)
                0x0000000000000296                _etext = .

.data           0x0000000000800060       0x10 load address 0x0000000000000296
                0x0000000000800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.9.2/../../../../avr/lib/avr4/crtm8.o
 .data          0x0000000000800060        0x0 main.o
 .data          0x0000000000800060        0x0 uart.o
 .data          0x0000000000800060        0x0 spi.o
 .data          0x0000000000800060        0x0 mcp2515.o
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_exit.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_copy_data.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_clear_bss.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 .rodata.str1.1
                0x0000000000800060       0x10 main.o
 *(.gnu.linkonce.d*)
                0x0000000000800070                . = ALIGN (0x2)
                0x0000000000800070                _edata = .
                0x0000000000800070                PROVIDE (__data_end, .)

.bss            0x0000000000800070       0x45
                0x0000000000800070                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x0000000000800070        0x0 /usr/lib/gcc/avr/4.9.2/../../../../avr/lib/avr4/crtm8.o
 .bss           0x0000000000800070        0x0 main.o
 .bss           0x0000000000800070       0x45 uart.o
 .bss           0x00000000008000b5        0x0 spi.o
 .bss           0x00000000008000b5        0x0 mcp2515.o
 .bss           0x00000000008000b5        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_exit.o)
 .bss           0x00000000008000b5        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_copy_data.o)
 .bss           0x00000000008000b5        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_clear_bss.o)
 *(.bss*)
 *(COMMON)
                0x00000000008000b5                PROVIDE (__bss_end, .)
                0x0000000000000296                __data_load_start = LOADADDR (.data)
                0x00000000000002a6                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x00000000008000b5        0x0
                0x00000000008000b5                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x00000000008000b5                PROVIDE (__noinit_end, .)
                0x00000000008000b5                _end = .
                0x00000000008000b5                PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x27
 *(.comment)
 .comment       0x0000000000000000       0x27 main.o
                                         0x28 (size before relaxing)
 .comment       0x0000000000000027       0x28 uart.o
 .comment       0x0000000000000027       0x28 spi.o
 .comment       0x0000000000000027       0x28 mcp2515.o

.note.gnu.build-id
 *(.note.gnu.build-id)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x0000000000000000       0x80
 *(.debug_aranges)
 .debug_aranges
                0x0000000000000000       0x20 main.o
 .debug_aranges
                0x0000000000000020       0x20 uart.o
 .debug_aranges
                0x0000000000000040       0x20 spi.o
 .debug_aranges
                0x0000000000000060       0x20 mcp2515.o

.debug_pubnames
 *(.debug_pubnames)

.debug_info     0x0000000000000000      0xc41
 *(.debug_info .gnu.linkonce.wi.*)
 .debug_info    0x0000000000000000      0x48c /usr/lib/gcc/avr/4.9.2/../../../../avr/lib/avr4/crtm8.o
 .debug_info    0x000000000000048c       0xf7 main.o
 .debug_info    0x0000000000000583      0x2ee uart.o
 .debug_info    0x0000000000000871       0xa9 spi.o
 .debug_info    0x000000000000091a      0x327 mcp2515.o

.debug_abbrev   0x0000000000000000      0x859
 *(.debug_abbrev)
 .debug_abbrev  0x0000000000000000      0x44e /usr/lib/gcc/avr/4.9.2/../../../../avr/lib/avr4/crtm8.o
 .debug_abbrev  0x000000000000044e       0xa3 main.o
 .debug_abbrev  0x00000000000004f1      0x167 uart.o
 .debug_abbrev  0x0000000000000658       0x78 spi.o
 .debug_abbrev  0x00000000000006d0      0x189 mcp2515.o

.debug_line     0x0000000000000000      0x235
 *(.debug_line .debug_line.* .debug_line_end)
 .debug_line    0x0000000000000000       0x1d /usr/lib/gcc/avr/4.9.2/../../../../avr/lib/avr4/crtm8.o
 .debug_line    0x000000000000001d       0x69 main.o
 .debug_line    0x0000000000000086       0x9b uart.o
 .debug_line    0x0000000000000121       0x61 spi.o
 .debug_line    0x0000000000000182       0xb3 mcp2515.o

.debug_frame    0x0000000000000000      0x1d0
 *(.debug_frame)
 .debug_frame   0x0000000000000000       0x24 main.o
 .debug_frame   0x0000000000000024       0xec uart.o
 .debug_frame   0x0000000000000110       0x34 spi.o
 .debug_frame   0x0000000000000144       0x8c mcp2515.o

.debug_str      0x0000000000000000      0x421
 *(.debug_str)
 .debug_str     0x0000000000000000      0x17a /usr/lib/gcc/avr/4.9.2/../../../../avr/lib/avr4/crtm8.o
 .debug_str     0x000000000000017a      0x111 main.o
                                        0x14a (size before relaxing)
 .debug_str     0x000000000000028b       0xee uart.o
                                        0x22c (size before relaxing)
 .debug_str     0x0000000000000379       0x19 spi.o
                                        0x143 (size before relaxing)
 .debug_str     0x0000000000000392       0x8f mcp2515.o
                                        0x1cc (size before relaxing)

.debug_loc      0x0000000000000000      0x4de
 *(.debug_loc)
 .debug_loc     0x0000000000000000      0x30c uart.o
 .debug_loc     0x000000000000030c       0x1f spi.o
 .debug_loc     0x000000000000032b      0x1b3 mcp2515.o

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges   0x0000000000000000       0x10
 *(.debug_ranges)
 .debug_ranges  0x0000000000000000       0x10 main.o

.debug_macro
 *(.debug_macro)
OUTPUT(main.elf elf32-avr)
LOAD linker stubs

Cross Reference Table

Symbol                                            File
__bad_interrupt                                   /usr/lib/gcc/avr/4.9.2/../../../../avr/lib/avr4/crtm8.o
__bss_end                                         /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_clear_bss.o)
__bss_start                                       /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_clear_bss.o)
__data_end                                        /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_copy_data.o)
__data_load_start                                 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_copy_data.o)
__data_start                                      /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_copy_data.o)
__do_clear_bss                                    /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_clear_bss.o)
                                                  uart.o
__do_copy_data                                    /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_copy_data.o)
                                                  main.o
__heap_end                                        /usr/lib/gcc/avr/4.9.2/../../../../avr/lib/avr4/crtm8.o
__init                                            /usr/lib/gcc/avr/4.9.2/../../../../avr/lib/avr4/crtm8.o
__stack                                           /usr/lib/gcc/avr/4.9.2/../../../../avr/lib/avr4/crtm8.o
__vector_1                                        /usr/lib/gcc/avr/4.9.2/../../../../avr/lib/avr4/crtm8.o
__vector_10                                       /usr/lib/gcc/avr/4.9.2/../../../../avr/lib/avr4/crtm8.o
__vector_11                                       uart.o
                                                  /usr/lib/gcc/avr/4.9.2/../../../../avr/lib/avr4/crtm8.o
__vector_12                                       /usr/lib/gcc/avr/4.9.2/../../../../avr/lib/avr4/crtm8.o
__vector_13                                       uart.o
                                                  /usr/lib/gcc/avr/4.9.2/../../../../avr/lib/avr4/crtm8.o
__vector_14                                       /usr/lib/gcc/avr/4.9.2/../../../../avr/lib/avr4/crtm8.o
__vector_15                                       /usr/lib/gcc/avr/4.9.2/../../../../avr/lib/avr4/crtm8.o
__vector_16                                       /usr/lib/gcc/avr/4.9.2/../../../../avr/lib/avr4/crtm8.o
__vector_17                                       /usr/lib/gcc/avr/4.9.2/../../../../avr/lib/avr4/crtm8.o
__vector_18                                       /usr/lib/gcc/avr/4.9.2/../../../../avr/lib/avr4/crtm8.o
__vector_2                                        /usr/lib/gcc/avr/4.9.2/../../../../avr/lib/avr4/crtm8.o
__vector_3                                        /usr/lib/gcc/avr/4.9.2/../../../../avr/lib/avr4/crtm8.o
__vector_4                                        /usr/lib/gcc/avr/4.9.2/../../../../avr/lib/avr4/crtm8.o
__vector_5                                        /usr/lib/gcc/avr/4.9.2/../../../../avr/lib/avr4/crtm8.o
__vector_6                                        /usr/lib/gcc/avr/4.9.2/../../../../avr/lib/avr4/crtm8.o
__vector_7                                        /usr/lib/gcc/avr/4.9.2/../../../../avr/lib/avr4/crtm8.o
__vector_8                                        /usr/lib/gcc/avr/4.9.2/../../../../avr/lib/avr4/crtm8.o
__vector_9                                        /usr/lib/gcc/avr/4.9.2/../../../../avr/lib/avr4/crtm8.o
__vector_default                                  /usr/lib/gcc/avr/4.9.2/../../../../avr/lib/avr4/crtm8.o
__vectors                                         /usr/lib/gcc/avr/4.9.2/../../../../avr/lib/avr4/crtm8.o
_exit                                             /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_exit.o)
exit                                              /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_exit.o)
                                                  /usr/lib/gcc/avr/4.9.2/../../../../avr/lib/avr4/crtm8.o
main                                              main.o
                                                  /usr/lib/gcc/avr/4.9.2/../../../../avr/lib/avr4/crtm8.o
mcp_bit_mod                                       mcp2515.o
mcp_init                                          mcp2515.o
mcp_read_reg                                      mcp2515.o
mcp_write_reg                                     mcp2515.o
spi_init                                          spi.o
                                                  mcp2515.o
spi_trans                                         spi.o
                                                  mcp2515.o
uart_getc                                         uart.o
uart_init                                         uart.o
                                                  main.o
uart_putc                                         uart.o
uart_puts                                         uart.o
                                                  main.o
uart_puts_p                                       uart.o
